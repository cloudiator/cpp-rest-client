/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * AttributeRequirement.h
 *
 * Subtype of Requirement 
 */

#ifndef IO_GITHUB_CLOUDIATOR_REST_MODEL_AttributeRequirement_H_
#define IO_GITHUB_CLOUDIATOR_REST_MODEL_AttributeRequirement_H_


#include <cpprest/details/basic_types.h>
#include "Requirement.h"
#include "RequirementOperator.h"

namespace io {
namespace github {
namespace cloudiator {
namespace rest {
namespace model {

/// <summary>
/// Subtype of Requirement 
/// </summary>
class  AttributeRequirement
    : public Requirement
{
public:
    AttributeRequirement();
    virtual ~AttributeRequirement();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AttributeRequirement members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRequirementClass() const;
    bool requirementClassIsSet() const;
    void unsetRequirementClass();
    void setRequirementClass(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRequirementAttribute() const;
    bool requirementAttributeIsSet() const;
    void unsetRequirementAttribute();
    void setRequirementAttribute(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<RequirementOperator> getRequirementOperator() const;
    bool requirementOperatorIsSet() const;
    void unsetRequirementOperator();
    void setRequirementOperator(std::shared_ptr<RequirementOperator> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getValue() const;
    bool valueIsSet() const;
    void unsetValue();
    void setValue(utility::string_t value);

protected:
    utility::string_t m_RequirementClass;
    bool m_RequirementClassIsSet;
    utility::string_t m_RequirementAttribute;
    bool m_RequirementAttributeIsSet;
    std::shared_ptr<RequirementOperator> m_RequirementOperator;
    bool m_RequirementOperatorIsSet;
    utility::string_t m_Value;
    bool m_ValueIsSet;
};

}
}
}
}
}

#endif /* IO_GITHUB_CLOUDIATOR_REST_MODEL_AttributeRequirement_H_ */
