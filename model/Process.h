/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Process.h
 *
 * 
 */

#ifndef IO_GITHUB_CLOUDIATOR_REST_MODEL_Process_H_
#define IO_GITHUB_CLOUDIATOR_REST_MODEL_Process_H_


#include "../ModelBase.h"

#include "ProcessNew.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace github {
namespace cloudiator {
namespace rest {
namespace model {

/// <summary>
/// 
/// </summary>
class  Process
    : public ModelBase
{
public:
    Process();
    virtual ~Process();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Process members

    /// <summary>
    /// The id of the schedule this process belongs to.
    /// </summary>
    utility::string_t getSchedule() const;
        void setSchedule(utility::string_t value);
    /// <summary>
    /// The id of the task that is instantiated by this process.
    /// </summary>
    utility::string_t getTask() const;
        void setTask(utility::string_t value);
    /// <summary>
    /// Tne id of the node this process is hosted on.
    /// </summary>
    utility::string_t getNode() const;
        void setNode(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();
    void setType(utility::string_t value);

protected:
    utility::string_t m_Schedule;
        utility::string_t m_Task;
        utility::string_t m_Node;
        utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
};

}
}
}
}
}

#endif /* IO_GITHUB_CLOUDIATOR_REST_MODEL_Process_H_ */
