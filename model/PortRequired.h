/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PortRequired.h
 *
 * Subtype of port. Represents a communication port that the task requires from other (downstream) tasks. 
 */

#ifndef IO_GITHUB_CLOUDIATOR_REST_MODEL_PortRequired_H_
#define IO_GITHUB_CLOUDIATOR_REST_MODEL_PortRequired_H_


#include <cpprest/details/basic_types.h>
#include "Port.h"

namespace io {
namespace github {
namespace cloudiator {
namespace rest {
namespace model {

/// <summary>
/// Subtype of port. Represents a communication port that the task requires from other (downstream) tasks. 
/// </summary>
class  PortRequired
    : public Port
{
public:
    PortRequired();
    virtual ~PortRequired();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PortRequired members

    /// <summary>
    /// A script that is executed if a new instance of a downstream task is available. 
    /// </summary>
    utility::string_t getUpdateAction() const;
    bool updateActionIsSet() const;
    void unsetUpdateAction();
    void setUpdateAction(utility::string_t value);
    /// <summary>
    /// States if an instance of a downstream tasks needs to be already started (true), or if the task can start without a downstream task (false). 
    /// </summary>
    bool isIsMandatory() const;
        void setIsMandatory(bool value);

protected:
    utility::string_t m_UpdateAction;
    bool m_UpdateActionIsSet;
    bool m_IsMandatory;
    };

}
}
}
}
}

#endif /* IO_GITHUB_CLOUDIATOR_REST_MODEL_PortRequired_H_ */
