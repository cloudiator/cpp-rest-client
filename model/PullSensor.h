/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PullSensor.h
 *
 * 
 */

#ifndef IO_GITHUB_CLOUDIATOR_REST_MODEL_PullSensor_H_
#define IO_GITHUB_CLOUDIATOR_REST_MODEL_PullSensor_H_


#include "Sensor.h"
#include <cpprest/details/basic_types.h>
#include "Interval.h"
#include "Map.h"

namespace io {
namespace github {
namespace cloudiator {
namespace rest {
namespace model {

/// <summary>
/// 
/// </summary>
class  PullSensor
    : public Sensor
{
public:
    PullSensor();
    virtual ~PullSensor();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PullSensor members

    /// <summary>
    /// ClassName of the sensor
    /// </summary>
    utility::string_t getClassName() const;
    bool classNameIsSet() const;
    void unsetClassName();
    void setClassName(utility::string_t value);
    /// <summary>
    /// Configuration of the sensor as key-value map
    /// </summary>
    std::shared_ptr<Map> getConfiguration() const;
    bool configurationIsSet() const;
    void unsetConfiguration();
    void setConfiguration(std::shared_ptr<Map> value);
    /// <summary>
    /// The interval at which the sensor is executed
    /// </summary>
    std::shared_ptr<Interval> getInterval() const;
    bool intervalIsSet() const;
    void unsetInterval();
    void setInterval(std::shared_ptr<Interval> value);

protected:
    utility::string_t m_ClassName;
    bool m_ClassNameIsSet;
    std::shared_ptr<Map> m_Configuration;
    bool m_ConfigurationIsSet;
    std::shared_ptr<Interval> m_Interval;
    bool m_IntervalIsSet;
};

}
}
}
}
}

#endif /* IO_GITHUB_CLOUDIATOR_REST_MODEL_PullSensor_H_ */
