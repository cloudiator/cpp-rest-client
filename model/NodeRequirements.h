/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * NodeRequirements.h
 *
 * Issues a request to the matchmaking component 
 */

#ifndef IO_GITHUB_CLOUDIATOR_REST_MODEL_NodeRequirements_H_
#define IO_GITHUB_CLOUDIATOR_REST_MODEL_NodeRequirements_H_


#include "../ModelBase.h"

#include "Optimization.h"
#include "Requirement.h"
#include <vector>

namespace io {
namespace github {
namespace cloudiator {
namespace rest {
namespace model {

/// <summary>
/// Issues a request to the matchmaking component 
/// </summary>
class  NodeRequirements
    : public ModelBase
{
public:
    NodeRequirements();
    virtual ~NodeRequirements();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// NodeRequirements members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Requirement>>& getRequirements();
    bool requirementsIsSet() const;
    void unsetRequirements();
    void setRequirements(std::vector<std::shared_ptr<Requirement>> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Optimization> getOptimization() const;
    bool optimizationIsSet() const;
    void unsetOptimization();
    void setOptimization(std::shared_ptr<Optimization> value);

protected:
    std::vector<std::shared_ptr<Requirement>> m_Requirements;
    bool m_RequirementsIsSet;
    std::shared_ptr<Optimization> m_Optimization;
    bool m_OptimizationIsSet;
};

}
}
}
}
}

#endif /* IO_GITHUB_CLOUDIATOR_REST_MODEL_NodeRequirements_H_ */
